package tables

import (
	"fmt"
	"gys/models"
	"strings"

	"github.com/GoAdminGroup/go-admin/context"
	"github.com/GoAdminGroup/go-admin/modules/db"
	"github.com/GoAdminGroup/go-admin/plugins/admin/modules/table"
	"github.com/GoAdminGroup/go-admin/template/types"
	"github.com/GoAdminGroup/go-admin/template/types/form"
)

func GetMerchantsTable(ctx *context.Context) table.Table {

	merchants := table.NewDefaultTable(table.DefaultConfigWithDriver("postgresql"))

	info := merchants.GetInfo()

	info.SetFilterFormLayout(form.LayoutFourCol)
	info.AddField("序号", "id", db.Int8).
		FieldSortable()
	info.AddField("商家名称", "name", db.Text).
		FieldFilterable(types.FilterType{Operator: types.FilterOperatorLike}). // 模糊查询
		FieldSortable().
		FieldEditAble()
		/* 	info.AddField("商家编码", "mcode", db.Text).
		FieldSortable().
		FieldEditAble() */
	info.AddField("商家类型", "mtype", db.Text).
		FieldFilterable(types.FilterType{FormType: form.SelectSingle}).
		FieldFilterOptions(types.FieldOptions{
			{Value: "服务商", Text: "服务商"},
			{Value: "承接商", Text: "承接商"},
			{Value: "不合作", Text: "不合作"},
		}).
		FieldSortable().
		FieldEditAble()
	info.AddField("加盟关系", "join_relation", db.Text).
		FieldFilterable(types.FilterType{FormType: form.SelectSingle}).
		FieldFilterOptions(types.FieldOptions{
			{Value: "新引入", Text: "新引入"},
			{Value: "意向加盟商", Text: "意向加盟商"},
			{Value: "加盟商", Text: "加盟商"},
		}).
		FieldSortable().
		FieldEditAble()
	info.AddField("合作关系", "cooperate_relation", db.Text).
		FieldFilterable(types.FilterType{FormType: form.SelectSingle}).
		FieldFilterOptions(types.FieldOptions{
			{Value: "合作", Text: "合作"},
			{Value: "不合作", Text: "不合作"},
			{Value: "待确定", Text: "待确定"},
		}).
		FieldSortable().
		FieldEditAble()
	info.AddField("引入日期", "introduction_date", db.Timestamptz).
		FieldFilterable(types.FilterType{FormType: form.DatetimeRange}).
		FieldSortable().
		FieldEditAble()
	info.AddField("转承接商日期", "be_undertaker_date", db.Timestamptz).
		FieldFilterable(types.FilterType{FormType: form.DatetimeRange}).
		FieldSortable().
		FieldEditAble()
	info.AddField("转服务商日期", "be_serviceprovider_date", db.Timestamptz).
		FieldFilterable(types.FilterType{FormType: form.DatetimeRange}).
		FieldSortable().
		FieldEditAble()
	info.AddField("签约日期", "contract_date", db.Timestamptz).
		FieldFilterable(types.FilterType{FormType: form.DatetimeRange}).
		FieldSortable().
		FieldEditAble()
	info.AddField("失效日期", "expiration_date", db.Timestamptz).
		FieldFilterable(types.FilterType{FormType: form.DatetimeRange}).
		FieldSortable().
		FieldEditAble()
	info.AddField("备注", "remarks", db.Text).
		FieldEditAble()
	info.AddField("服务区域", "custom_serve_cities", db.Text).
		FieldDisplay(func(model types.FieldModel) interface{} {

			orm := models.DB
			var merchant models.Merchant
			var areas []models.ServeArea
			merchant.ID = uint((model.Row["id"].(int64)))
			orm.Model(&merchant).Association("Areas").Find(&areas)
			fmt.Println("areas:", areas)
			cities := make([]string, 0)
			for _, area := range areas {
				cities = append(cities, area.CityName)
			}

			return strings.Join(cities, ",")

		})

	info.SetTable("merchants").SetTitle("商家信息表").SetDescription("Merchants")

	formList := merchants.GetForm()
	formList.AddField("序号", "id", db.Int8, form.Default).
		FieldDisableWhenCreate().
		FieldDisableWhenUpdate().
		FieldHideWhenUpdate()

	formList.AddField("商家名称", "name", db.Text, form.Text)
	formList.AddField("商家编码", "mcode", db.Text, form.Text)
	formList.AddField("商家类型", "mtype", db.Text, form.Text)
	formList.AddField("加盟关系", "join_relation", db.Text, form.Text)
	formList.AddField("合作关系", "cooperate_relation", db.Text, form.Text)

	formList.AddField("引入日期", "introduction_date", db.Timestamptz, form.Date)
	formList.AddField("转承接商日期", "be_undertaker_date", db.Timestamptz, form.Date)
	formList.AddField("转服务商日期", "be_serviceprovider_date", db.Timestamptz, form.Date)
	formList.AddField("签约日期", "contract_date", db.Timestamptz, form.Date)
	formList.AddField("失效日期", "expiration_date", db.Timestamptz, form.Date)
	formList.AddField("备注", "remarks", db.Text, form.Text)

	formList.SetTable("merchants").SetTitle("商家信息详情").SetDescription("Merchants")

	return merchants
}
